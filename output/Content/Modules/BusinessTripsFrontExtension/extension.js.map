{"version":3,"file":"extension.js","sources":["../../../../src/Controllers/CustomCityDataController.ts","../../../../src/Controllers/CustomEmployeeDataController.ts","../../../../src/Controllers/CustomOperationDataController.ts","../../../../src/EventHandlers/SomeEventHandlers.ts","../../../../src/Index.ts"],"sourcesContent":["import { $RequestManager } from \"@docsvision/webclient/System/$RequestManager\";\r\nimport { serviceName } from \"@docsvision/webclient/System/ServiceUtils\";\r\nimport { urlStore } from \"@docsvision/webclient/System/UrlStore\";\r\nimport { ICustomCityData } from \"../Models/ICustomCityData\";\r\n\r\nexport class CustomCityDataController {\r\n\tconstructor(private services: $RequestManager) { }\r\n\r\n\tpublic GetCityData(cityId: string): Promise<ICustomCityData> {\r\n\t\tlet url = urlStore.urlResolver.resolveUrl(\"GetCustomCityData\", \"CustomCityData\");\r\n\t\tlet data = { cityId: cityId }\r\n\t\treturn this.services.requestManager.post(url, JSON.stringify(data));\r\n\t}\r\n}\r\n\r\nexport type $CustomCityDataController = { CustomCityDataController: CustomCityDataController }\r\nexport const $CustomCityDataController = serviceName(\r\n\t(s: $CustomCityDataController) => s.CustomCityDataController\r\n)","import { $RequestManager } from \"@docsvision/webclient/System/$RequestManager\";\r\nimport { serviceName } from \"@docsvision/webclient/System/ServiceUtils\";\r\nimport { urlStore } from \"@docsvision/webclient/System/UrlStore\";\r\nimport { ICustomEmployeeData } from \"../Models/ICustomEmployeeData\";\r\nimport { ICustomEmployeeModelsData } from \"../Models/ICustomEmployeeModelsData\";\r\n\r\nexport class CustomEmployeeDataController {\r\n\tconstructor(private services: $RequestManager) { }\r\n\r\n\tpublic GetEmployeeData(employeeId: string): Promise<ICustomEmployeeData> {\r\n\t\tlet url = urlStore.urlResolver.resolveUrl(\"GetCustomEmployeeData\", \"CustomEmployeeData\");\r\n\t\tlet data = { employeeId: employeeId }\r\n\t\treturn this.services.requestManager.post(url, JSON.stringify(data));\r\n\t}\r\n\r\n\tpublic GetEmployeesFromGroup(groupName: string) : Promise<ICustomEmployeeModelsData>{\r\n\t\tlet url = urlStore.urlResolver.resolveUrl(\"GetCustomEmployeesFromGroup\", \"CustomEmployeeData\");\r\n\t\tlet data = { groupName: groupName }\r\n\t\treturn this.services.requestManager.post(url, JSON.stringify(data));\r\n\t}\r\n}\r\n\r\nexport type $CustomEmployeeDataController = { CustomEmployeeDataController: CustomEmployeeDataController }\r\nexport const $CustomEmployeeDataController = serviceName(\r\n\t(s: $CustomEmployeeDataController) => s.CustomEmployeeDataController\r\n)","import { $RequestManager } from \"@docsvision/webclient/System/$RequestManager\";\r\nimport { serviceName } from \"@docsvision/webclient/System/ServiceUtils\";\r\nimport { urlStore } from \"@docsvision/webclient/System/UrlStore\";\r\nimport { ICustomOperationData } from \"../Models/ICustomOperationData\";\r\n\r\nexport class CustomOperationDataController {\r\n\tconstructor(private services: $RequestManager) { }\r\n\r\n\tpublic GetOperationData(cardId: string, endStateName: string): Promise<ICustomOperationData> {\r\n\t\tlet url = urlStore.urlResolver.resolveUrl(\"GetCustomOperationData\", \"CustomOperationData\");\r\n\t\tlet data = { cardId: cardId, endStateName: endStateName }\r\n\t\treturn this.services.requestManager.post(url, JSON.stringify(data));\r\n\t}\r\n}\r\n\r\nexport type $CustomOperationDataController = { CustomOperationDataController: CustomOperationDataController }\r\nexport const $CustomOperationDataController = serviceName(\r\n\t(s: $CustomOperationDataController) => s.CustomOperationDataController\r\n)","import { CardKind } from \"@docsvision/webclient/BackOffice/CardKind\";\r\nimport { DirectoryDesignerRow } from \"@docsvision/webclient/BackOffice/DirectoryDesignerRow\";\r\nimport { Employee } from \"@docsvision/webclient/BackOffice/Employee\";\r\nimport { findStaffSection } from \"@docsvision/webclient/BackOffice/FindStaffSection\";\r\nimport { MultipleEmployees } from \"@docsvision/webclient/BackOffice/MultipleEmployees\";\r\nimport { Numerator } from \"@docsvision/webclient/BackOffice/Numerator\";\r\nimport { State } from \"@docsvision/webclient/BackOffice/State\";\r\nimport { $CardController, $DepartmentController, $EmployeeController, $LayoutStaffController, $StaffDirectoryItemsController } from \"@docsvision/webclient/Generated/DocsVision.WebClient.Controllers\";\r\nimport { GenModels } from \"@docsvision/webclient/Generated/DocsVision.WebClient.Models\";\r\nimport { MessageBox } from \"@docsvision/webclient/Helpers/MessageBox/MessageBox\";\r\nimport { $EmployeesController } from \"@docsvision/webclient/Legacy/EmployeesController\";\r\nimport { ContextMenu } from \"@docsvision/webclient/Platform/ContextMenu\";\r\nimport { CustomButton } from \"@docsvision/webclient/Platform/CustomButton\";\r\nimport { DateTimePicker } from \"@docsvision/webclient/Platform/DateTimePicker\";\r\nimport { ISavingButtonClickEventArgs } from \"@docsvision/webclient/Platform/ISavingButtonClickEventArgs\";\r\nimport { NumberControl } from \"@docsvision/webclient/Platform/Number\";\r\nimport { SavingButtons } from \"@docsvision/webclient/Platform/SavingButtons\";\r\nimport { services } from \"@docsvision/webclient/Platform/TestUtils\";\r\nimport { TextArea } from \"@docsvision/webclient/Platform/TextArea\";\r\nimport { TextBox } from \"@docsvision/webclient/Platform/TextBox\";\r\nimport { CancelableApiEvent } from \"@docsvision/webclient/System/ApiEvent\";\r\nimport { BaseControl } from \"@docsvision/webclient/System/BaseControl\";\r\nimport { ControlContext } from \"@docsvision/webclient/System/ControlContext\";\r\nimport { ICancelableEventArgs } from \"@docsvision/webclient/System/ICancelableEventArgs\";\r\nimport { IEventArgs } from \"@docsvision/webclient/System/IEventArgs\";\r\nimport { Layout, SaveControlDataModelEventArgs } from \"@docsvision/webclient/System/Layout\";\r\nimport { layoutManager } from \"@docsvision/webclient/System/LayoutManager\";\r\nimport { func } from \"prop-types\";\r\nimport { $CustomCityDataController } from \"../Controllers/CustomCityDataController\";\r\nimport { $CustomEmployeeDataController } from \"../Controllers/CustomEmployeeDataController\";\r\nimport { $CustomOperationDataController } from \"../Controllers/CustomOperationDataController\";\r\n\r\n//В разметке на «редактирование»: при изменении контролов «Даты командировки С:» или «по:» \r\n//и, если заполнены оба поля необходимо рассчитать кол-во дней в командировке и записать \r\n//в поле «Кол-во дней в командировке».\r\nexport async function dateSince_ChangeData(sender: DateTimePicker) {\r\n\tawait setTripDaysValue(sender);\r\n}\r\n\r\nexport async function dateTill_ChangeData(sender: DateTimePicker) {\r\n\tawait setTripDaysValue(sender);\r\n}\r\n\r\nasync function setTripDaysValue(sender: DateTimePicker) {\r\n\tlet layout = sender.layout;\r\n\tlet tripDaysContol = layout.controls.tryGet<NumberControl>(\"tripDays\");\r\n\tlet otherDateContolName = sender.params.name == \"dateSince\" ? \"dateTill\" : \"dateSince\";\r\n\tlet otherDateContol = layout.controls.tryGet<DateTimePicker>(otherDateContolName);\r\n\tif (!tripDaysContol || !otherDateContol) return;\r\n\r\n\ttripDaysContol.value = getDateDifference(sender, otherDateContol);\r\n}\r\n\r\nfunction getDateDifference(sender: DateTimePicker, otherDateContol: DateTimePicker) {\r\n\tlet senderDate = sender.value;\r\n\tlet otherDate = otherDateContol.value;\r\n\tlet senderDateOnly = senderDate.setHours(0, 0, 0, 0);\r\n\tlet otherDateOnly = otherDate.setHours(0, 0, 0, 0);\r\n\tlet milliseconds = Math.abs(senderDateOnly - otherDateOnly);\r\n\tlet millisecondsPerDay = 1000 * 60 * 60 * 24;\r\n\treturn Math.floor(milliseconds / millisecondsPerDay) + 1;\r\n}\r\n\r\n//В разметке на «чтение»: добавить на ленту кнопку, по нажатию на кнопку \r\n//выводить сообщение (MessageBox.ShowInfo) с краткой информацией по заявке: \r\n//«Номер заявки», «Дата создания», «Даты командировки С:», «по:», «Основание для поездки».\r\nexport async function shortInfo_click(sender: CustomButton) {\r\n\tlet layout = sender.layout;\r\n\tlet numberControl = layout.controls.tryGet<Numerator>(\"applicationNumber\");\r\n\tlet crDateControl = layout.controls.tryGet<DateTimePicker>(\"date\");\r\n\tlet sinceContol = layout.controls.tryGet<DateTimePicker>(\"dateSince\");\r\n\tlet tillContol = layout.controls.tryGet<DateTimePicker>(\"dateTill\");\r\n\tlet reasonControl = layout.controls.tryGet<TextArea>(\"reason\");\r\n\tif (!numberControl || !crDateControl || !sinceContol || !tillContol || !reasonControl) return;\r\n\r\n\tMessageBox.ShowInfo(\r\n\t\t\"Номер заявки: {0}\\n\".format(numberControl.hasValue() ? numberControl.value.number : \"не задано\")\r\n\t\t+ \"Дата создания: {0}\\n\".format(crDateControl.hasValue() ? crDateControl.value.toLocaleDateString() : \"не задано\")\r\n\t\t+ \"Даты командировки С: {0} \".format(sinceContol.hasValue() ? sinceContol.value.toLocaleDateString() : \"не задано\")\r\n\t\t+ \"по: {0}\\n\".format(tillContol.hasValue() ? tillContol.value.toLocaleDateString() : \"не задано\")\r\n\t\t+ \"Основание для поездки: {0}\".format(reasonControl.hasValue() ? reasonControl.value.toString() : \"не задано\")\r\n\t);\r\n}\r\n\r\n//#region отмена сохранения, не работает\r\n//!!! root имеет событие Подготовка к сохранению карточки\r\n\r\n//В разметке на «редактирование»: перед сохранением карточки проверить, что заполнен элемент \r\n//«Номер заявки» и «Название», если он пустой, выдавать предупреждение и отменять сохранение.\r\nexport async function savingButtons_beforeClick(sender: SavingButtons, e: ISavingButtonClickEventArgs) {\r\n\tlet layout = sender.layout;\r\n\tlet numberControl = layout.controls.tryGet<Numerator>(\"applicationNumber\");\r\n\tlet nameControl = layout.controls.tryGet<TextBox>(\"name\");\r\n\r\n\tlet savingBtnContol = layout.controls.tryGet<SavingButtons>(\"savingButtons\");\r\n\r\n\tif (!numberControl || !nameControl) return;\r\n\r\n\tif (!numberControl.hasValue() || !nameControl.hasValue()) {\r\n\t\tMessageBox.ShowInfo(\"Поля \\\"Номер заявки\\\" и \\\"Название\\\" должны быть заполнены\");\r\n\t\t// sender.performCancel();\r\n\t\tsavingBtnContol.performCancel();\r\n\t\treturn;\r\n\t}\r\n\r\n\t// sender.performSave();\r\n\tsavingBtnContol.performSave();\r\n}\r\n\r\n// export function onCardSaving(sender: Layout, e: CancelableApiEvent<SaveControlDataModelEventArgs>) {\r\n//     let layout = sender.layout;\r\n// \tlet numberControl = layout.controls.tryGet<Numerator>(\"applicationNumber\");\r\n// \tlet nameControl = layout.controls.tryGet<TextBox>(\"name\");\r\n\r\n// \tif (!numberControl.hasValue() || !nameControl.hasValue())\r\n// \t{\r\n// \t\tMessageBox.ShowInfo(\"Поля \\\"Номер заявки\\\" и \\\"Название\\\" должны быть заполнены\");\r\n// \t\te.cancel();\r\n// \t\treturn;\r\n// \t}\r\n// \te.accept();\r\n// }\r\n\r\n//#endregion\r\n\r\n\r\n//В разметке на «редактирование»: при изменении поля «Командируемый», \r\n//поля «Руководитель» и «Телефон» необходимо заполнить данными из сотрудника, выбранного в поле.\r\nexport async function employeeToSend_ChangeData(sender: Employee) {\r\n\tlet layout = sender.layout;\r\n\tlet managerControl = layout.controls.tryGet<Employee>(\"supervisor\");\r\n\tlet phoneControl = layout.controls.tryGet<TextBox>(\"phoneNumber\");\r\n\tif (!managerControl || !phoneControl) return;\r\n\r\n\tif (sender.hasValue()) {\r\n\t\tlet customEmplService = layout.getService($CustomEmployeeDataController);\r\n\t\tlet model = await customEmplService.GetEmployeeData(sender.params.value.id);\r\n\t\tif (model) {\r\n\t\t\tmanagerControl.params.value = model.manager;\r\n\t\t\tphoneControl.params.value = model.phone;\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tmanagerControl.params.value = null;\r\n\tphoneControl.params.value = null;\r\n}\r\n\r\n// В разметке на «редактирование»: при первом открытии карточки в поле «Кто оформляет» \r\n//должны вписываться сотрудники из группы справочника сотрудников - «Секретарь».\r\nexport async function fillWhoArranges_ElementsLoaded() {\r\n\tlet layout = layoutManager.cardLayout;\r\n\tlet isCreateLayout = layout.layoutInfo.action == 2; // View: = 0 Edit: = 1 Create: = 2\r\n\t//let isCreateLayout = layout.layoutInfo.action = GenModels.LayoutAction.Create;\r\n\tif (!isCreateLayout) return;\r\n\r\n\tlet managerControl = layout.controls.tryGet<MultipleEmployees>(\"whoArranges\");\r\n\tif (!managerControl) return;\r\n\tlet service = layout.getService($CustomEmployeeDataController);\r\n\tlet model = await service.GetEmployeesFromGroup(\"Секретарь\");\r\n\tif (model) {\r\n\t\tmanagerControl.params.value = model.employees;\r\n\t}\r\n}\r\n\r\n//В разметке на «редактирование»: при выборе значения в поле «Город», необходимо получить значение \r\n//из этого элемента справочника (мы его создавали ранее, поле «Суточные») и вписать в поле \r\n//«Сумма командировочных», рассчитав по следующей формуле: \r\n//«Суточные» * значение в поле «Кол-во дней в командировке».\r\nexport async function city_ChangeData(sender: DirectoryDesignerRow) {\r\n\tlet layout = sender.layout;\r\n\tlet tripDaysContol = layout.controls.tryGet<NumberControl>(\"tripDays\");\r\n\tlet expensesContol = layout.controls.tryGet<NumberControl>(\"expenses\");\r\n\tif (!tripDaysContol || !expensesContol) return;\r\n\tif (!tripDaysContol.hasValue()) return;\r\n\r\n\tif (sender.hasValue()) {\r\n\t\tlet service = layout.getService($CustomCityDataController);\r\n\t\tlet model = await service.GetCityData(sender.params.value.id);\r\n\t\tif (model) {\r\n\t\t\texpensesContol.params.value = parseFloat(model.dailyAllowance) * tripDaysContol.value;\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\texpensesContol.params.value = null;\r\n}\r\n\r\n// В разметке на «чтение»: добавить кнопку на форму карточки, переводящую карточку в состояние \r\n// «На согласование» и доступна только в состоянии «Проект».\r\nexport async function toApproving_Click(sender: CustomButton) {\r\n// private void ToApproving_ItemClick(System.Object sender, DevExpress.XtraBars.ItemClickEventArgs e)\r\n// {\r\n// ILayoutPropertyItem stateControl = CustomizableControl.FindPropertyItem<ILayoutPropertyItem>(\"State\");\r\n// if (stateControl == null) return;\r\n\r\n// IStateService stateService = ObjContext.GetService<IStateService>();\r\n// IList<StatesStateMachineBranch> statesStateMachineBranch = stateService.GetStateMachineBranches(BaseObject.SystemInfo.CardKind);\r\n// StatesStateMachineBranch toApprovingBranch = statesStateMachineBranch.Single(b => b.Operation.DefaultName == \"ToApproving\");\r\n// CardControl.ChangeState(toApprovingBranch);\r\n\r\n// if (BaseObject.SystemInfo.State.DefaultName != \"Project\") \r\n// {\r\n// \tBarItemLink il = CustomizableControl.RibbonControl\r\n// \t\t.Pages[\"Документ\"]\r\n// \t\t.Groups[\"stateMachineRibbonPageGroup\"]\r\n// \t\t.ItemLinks.Single(link => link.Item.Name == \"ToApproving\");\r\n\t\t\r\n// \til.Item.Enabled = false;\r\n// }\r\n// }\r\n\tlet layout = sender.layout;\r\n\tlet stateContol = layout.controls.tryGet<State>(\"state\");\r\n\tif (stateContol == null) return;\r\n\tlet service = layout.getService($CustomOperationDataController);\r\n\tlet id = layout.cardInfo.id;\r\n\tlet data = await service.GetOperationData(id, \"ToApproving\");\r\n\tawait layout.changeState(data.operationId);\r\n\r\n\r\n}\r\n","﻿import * as SomeEventHandlers from \"./EventHandlers/SomeEventHandlers\";\r\nimport { extensionManager } from \"@docsvision/webclient/System/ExtensionManager\";\r\nimport { Service } from \"@docsvision/webclient/System/Service\";\r\nimport { $CustomEmployeeDataController, CustomEmployeeDataController } from \"./Controllers/CustomEmployeeDataController\";\r\nimport { $RequestManager } from \"@docsvision/webclient/System/$RequestManager\";\r\nimport { $CustomCityDataController, CustomCityDataController } from \"./Controllers/CustomCityDataController\";\r\nimport { $CustomOperationDataController, CustomOperationDataController } from \"./Controllers/CustomOperationDataController\";\r\n\r\n// Главная входная точка всего расширения\r\n// Данный файл должен импортировать прямо или косвенно все остальные файлы, \r\n// чтобы rollup смог собрать их все в один бандл.\r\n\r\n// Регистрация расширения позволяет корректно установить все\r\n// обработчики событий, сервисы и прочие сущности web-приложения.\r\nextensionManager.registerExtension({\r\n    name: \"Business Trip Front Extension\",\r\n    version: \"1.0.0\",\r\n    globalEventHandlers: [ SomeEventHandlers ],\r\n    layoutServices: [\r\n        Service.fromFactory(\r\n            $CustomEmployeeDataController,\r\n            (services: $RequestManager) => new CustomEmployeeDataController(services)\r\n        ),\r\n        Service.fromFactory(\r\n            $CustomCityDataController,\r\n            (services: $RequestManager) => new CustomCityDataController(services)\r\n        ),\r\n        Service.fromFactory(\r\n            $CustomOperationDataController,\r\n            (services: $RequestManager) => new CustomOperationDataController(services)\r\n        ),\r\n    ]\r\n})\r\n"],"names":["urlStore","serviceName","MessageBox","layoutManager","extensionManager","Service"],"mappings":"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"}