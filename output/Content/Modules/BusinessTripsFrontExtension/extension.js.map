{"version":3,"file":"extension.js","sources":["../../../../src/Controllers/CustomCityDataController.ts","../../../../src/Controllers/CustomEmployeeDataController.ts","../../../../src/Controllers/CustomOperationDataController.ts","../../../../src/Controllers/CustomTicketsCostDataController.ts","../../../../src/EventHandlers/SomeEventHandlers.ts","../../../../src/Index.ts"],"sourcesContent":["import { $RequestManager } from \"@docsvision/webclient/System/$RequestManager\";\r\nimport { serviceName } from \"@docsvision/webclient/System/ServiceUtils\";\r\nimport { urlStore } from \"@docsvision/webclient/System/UrlStore\";\r\nimport { ICustomCityData } from \"../Models/ICustomCityData\";\r\n\r\nexport class CustomCityDataController {\r\n\tconstructor(private services: $RequestManager) { }\r\n\r\n\tpublic GetCityData(cityId: string): Promise<ICustomCityData> {\r\n\t\tlet url = urlStore.urlResolver.resolveUrl(\"GetCustomCityData\", \"CustomCityData\");\r\n\t\tlet data = { cityId: cityId }\r\n\t\treturn this.services.requestManager.post(url, JSON.stringify(data));\r\n\t}\r\n}\r\n\r\nexport type $CustomCityDataController = { CustomCityDataController: CustomCityDataController }\r\nexport const $CustomCityDataController = serviceName(\r\n\t(s: $CustomCityDataController) => s.CustomCityDataController\r\n)","import { $RequestManager } from \"@docsvision/webclient/System/$RequestManager\";\r\nimport { serviceName } from \"@docsvision/webclient/System/ServiceUtils\";\r\nimport { urlStore } from \"@docsvision/webclient/System/UrlStore\";\r\nimport { ICustomEmployeeData } from \"../Models/ICustomEmployeeData\";\r\nimport { ICustomEmployeeModelsData } from \"../Models/ICustomEmployeeModelsData\";\r\n\r\nexport class CustomEmployeeDataController {\r\n\tconstructor(private services: $RequestManager) { }\r\n\r\n\tpublic GetEmployeeData(employeeId: string): Promise<ICustomEmployeeData> {\r\n\t\tlet url = urlStore.urlResolver.resolveUrl(\"GetCustomEmployeeData\", \"CustomEmployeeData\");\r\n\t\tlet data = { employeeId: employeeId }\r\n\t\treturn this.services.requestManager.post(url, JSON.stringify(data));\r\n\t}\r\n\r\n\tpublic GetEmployeesFromGroup(groupName: string) : Promise<ICustomEmployeeModelsData>{\r\n\t\tlet url = urlStore.urlResolver.resolveUrl(\"GetCustomEmployeesFromGroup\", \"CustomEmployeeData\");\r\n\t\tlet data = { groupName: groupName }\r\n\t\treturn this.services.requestManager.post(url, JSON.stringify(data));\r\n\t}\r\n}\r\n\r\nexport type $CustomEmployeeDataController = { CustomEmployeeDataController: CustomEmployeeDataController }\r\nexport const $CustomEmployeeDataController = serviceName(\r\n\t(s: $CustomEmployeeDataController) => s.CustomEmployeeDataController\r\n)","import { $RequestManager } from \"@docsvision/webclient/System/$RequestManager\";\nimport { serviceName } from \"@docsvision/webclient/System/ServiceUtils\";\nimport { urlStore } from \"@docsvision/webclient/System/UrlStore\";\nimport { ICustomOperationData } from \"../Models/ICustomOperationData\";\n\nexport class CustomApprovingStageOperationDataController {\n\tconstructor(private services: $RequestManager) { }\n\n\tpublic GetApprovingStageOperationData(cardId: string, approvalStageName: string) : Promise<ICustomOperationData> {\n\t\tlet url = urlStore.urlResolver.resolveUrl(\n\t\t\t\"GetCustomApprovingStageOperationData\", \"CustomApprovingStageOperationData\");\n\t\tlet data = { cardId: cardId, approvalStageName: approvalStageName }\n\t\treturn this.services.requestManager.post(url, JSON.stringify(data));\n\t}\n}\n\nexport type $CustomApprovingStageOperationDataController = { \n\tCustomApprovingStageOperationDataController: CustomApprovingStageOperationDataController }\nexport const $CustomApprovingStageOperationDataController = serviceName(\n\t(s: $CustomApprovingStageOperationDataController) => s.CustomApprovingStageOperationDataController\n)","import { $RequestManager } from \"@docsvision/webclient/System/$RequestManager\";\r\nimport { serviceName } from \"@docsvision/webclient/System/ServiceUtils\";\r\nimport { urlStore } from \"@docsvision/webclient/System/UrlStore\";\r\nimport { ICustomTicketsCostData } from \"../Models/ICustomTicketsCostData\";\r\n\r\nexport class CustomTicketsCostDataController {\r\n\tconstructor(private services: $RequestManager) { }\r\n\r\n\tpublic GetTicketsCostData(destinationId: string, departureDate: Date, destinationDate: Date)\r\n\t: Promise<ICustomTicketsCostData> {\r\n\t\tlet url = urlStore.urlResolver.resolveUrl(\"GetCustomTicketsCostData\", \"CustomTicketsCostData\");\r\n\t\tlet data = { destinationId: destinationId, departureDate: departureDate, destinationDate: destinationDate };\r\n\t\tlet result = this.services.requestManager.post<ICustomTicketsCostData>(url, JSON.stringify(data));\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport type $CustomTicketsCostDataController = { CustomTicketsCostDataController: CustomTicketsCostDataController }\r\nexport const $CustomTicketsCostDataController = serviceName(\r\n\t(s: $CustomTicketsCostDataController) => s.CustomTicketsCostDataController\r\n)\r\n","import { DirectoryDesignerRow } from \"@docsvision/webclient/BackOffice/DirectoryDesignerRow\";\nimport { Employee } from \"@docsvision/webclient/BackOffice/Employee\";\nimport { MultipleEmployees } from \"@docsvision/webclient/BackOffice/MultipleEmployees\";\nimport { Numerator } from \"@docsvision/webclient/BackOffice/Numerator\";\nimport { State } from \"@docsvision/webclient/BackOffice/State\";\nimport { GenModels } from \"@docsvision/webclient/Generated/DocsVision.WebClient.Models\";\nimport { MessageBox } from \"@docsvision/webclient/Helpers/MessageBox/MessageBox\";\nimport { CustomButton } from \"@docsvision/webclient/Platform/CustomButton\";\nimport { DateTimePicker } from \"@docsvision/webclient/Platform/DateTimePicker\";\nimport { NumberControl } from \"@docsvision/webclient/Platform/Number\";\nimport { SavingButtons } from \"@docsvision/webclient/Platform/SavingButtons\";\nimport { TextArea } from \"@docsvision/webclient/Platform/TextArea\";\nimport { TextBox } from \"@docsvision/webclient/Platform/TextBox\";\nimport { ICancelableEventArgs } from \"@docsvision/webclient/System/ICancelableEventArgs\";\nimport { layoutManager } from \"@docsvision/webclient/System/LayoutManager\";\nimport { $CustomCityDataController } from \"../Controllers/CustomCityDataController\";\nimport { $CustomEmployeeDataController } from \"../Controllers/CustomEmployeeDataController\";\nimport { $CustomApprovingStageOperationDataController } from \"../Controllers/CustomOperationDataController\";\nimport { $CustomTicketsCostDataController } from \"../Controllers/CustomTicketsCostDataController\";\n\n//В разметке на «редактирование»: при изменении контролов «Даты командировки С:» или «по:» \n//и, если заполнены оба поля необходимо рассчитать кол-во дней в командировке и записать \n//в поле «Кол-во дней в командировке».\nexport async function dateSince_ChangeData(sender: DateTimePicker) {\n\tawait setTripDaysValue(sender);\n}\n\nexport async function dateTill_ChangeData(sender: DateTimePicker) {\n\tawait setTripDaysValue(sender);\n}\n\nasync function setTripDaysValue(sender: DateTimePicker) {\n\tlet layout = sender.layout;\n\tlet tripDaysContol = layout.controls.tryGet<NumberControl>(\"tripDays\");\n\tlet otherDateContolName = sender.params.name == \"dateSince\" ? \"dateTill\" : \"dateSince\";\n\tlet otherDateContol = layout.controls.tryGet<DateTimePicker>(otherDateContolName);\n\tif (!tripDaysContol || !otherDateContol) return;\n\n\tif (sender.params.name == \"dateSince\"){\n\t\tif (sender.params.value > otherDateContol.params.value){\n\t\t\ttripDaysContol.params.value = null;\n\t\t\treturn;\n\t\t}\n\t}\n\telse{\n\t\tif (sender.params.value < otherDateContol.params.value){\n\t\t\ttripDaysContol.params.value = null;\n\t\t\treturn;\n\t\t}\n\t}\n\ttripDaysContol.value = getDateDifference(sender, otherDateContol);\n}\n\nfunction getDateDifference(sender: DateTimePicker, otherDateContol: DateTimePicker) {\n\tlet senderDate = sender.value;\n\tlet otherDate = otherDateContol.value;\n\tlet senderDateOnly = senderDate.setHours(0, 0, 0, 0);\n\tlet otherDateOnly = otherDate.setHours(0, 0, 0, 0);\n\tlet milliseconds = Math.abs(senderDateOnly - otherDateOnly);\n\tlet millisecondsPerDay = 1000 * 60 * 60 * 24;\n\treturn Math.floor(milliseconds / millisecondsPerDay) + 1;\n}\n\n//В разметке на «чтение»: добавить на ленту кнопку, по нажатию на кнопку \n//выводить сообщение (MessageBox.ShowInfo) с краткой информацией по заявке: \n//«Номер заявки», «Дата создания», «Даты командировки С:», «по:», «Основание для поездки».\nexport async function shortInfo_click(sender: CustomButton) {\n\tlet layout = sender.layout;\n\tlet numberControl = layout.controls.tryGet<Numerator>(\"applicationNumber\");\n\tlet crDateControl = layout.controls.tryGet<DateTimePicker>(\"date\");\n\tlet sinceContol = layout.controls.tryGet<DateTimePicker>(\"dateSince\");\n\tlet tillContol = layout.controls.tryGet<DateTimePicker>(\"dateTill\");\n\tlet reasonControl = layout.controls.tryGet<TextArea>(\"reason\");\n\tif (!numberControl || !crDateControl || !sinceContol || !tillContol || !reasonControl) return;\n\n\tMessageBox.ShowInfo(\n\t\t\"Номер заявки: {0}\\n\".format(numberControl.hasValue() ? numberControl.value.number : \"не задано\")\n\t\t+ \"Дата создания: {0}\\n\".format(crDateControl.hasValue() ? crDateControl.value.toLocaleDateString() : \"не задано\")\n\t\t+ \"Даты командировки С: {0}\".format(sinceContol.hasValue() ? sinceContol.value.toLocaleDateString() : \"не задано\")\n\t\t+ \"по: {0}\\n\".format(tillContol.hasValue() ? tillContol.value.toLocaleDateString() : \"не задано\")\n\t\t+ \"Основание для поездки: {0}\".format(reasonControl.hasValue() ? reasonControl.value.toString() : \"не задано\")\n\t);\n}\n\n//В разметке на «редактирование»: перед сохранением карточки проверить, что заполнен элемент \n//«Номер заявки» и «Название», если он пустой, выдавать предупреждение и отменять сохранение.\nexport async function savingButtons_saveClick(sender: SavingButtons, e: ICancelableEventArgs<SavingButtons>) {\n\tlet layout = sender.layout;\n\tlet numberControl = layout.controls.tryGet<Numerator>(\"applicationNumber\");\n\tlet nameControl = layout.controls.tryGet<TextBox>(\"name\");\n\tif (!numberControl || !nameControl) return;\n\n\tif (!numberControl.hasValue()) {\n\t\tMessageBox.ShowInfo(\"Поле \\\"Номер заявки\\\" должно быть заполнено\");\n\t\te.cancel();\n\t\treturn;\n\t}\n\n\tif (!nameControl.hasValue() || nameControl.value.trim() == \"\") {\n\t\tMessageBox.ShowInfo(\"Поле \\\"Название\\\" должно быть заполнено\");\n\t\te.cancel();\n\t\treturn;\n\t}\n}\n\n//В разметке на «редактирование»: при изменении поля «Командируемый», \n//поля «Руководитель» и «Телефон» необходимо заполнить данными из сотрудника, выбранного в поле.\nexport async function employeeToSend_ChangeData(sender: Employee) {\n\tlet layout = sender.layout;\n\tlet managerControl = layout.controls.tryGet<Employee>(\"supervisor\");\n\tlet phoneControl = layout.controls.tryGet<TextBox>(\"phoneNumber\");\n\tif (!managerControl || !phoneControl) return;\n\n\tif (sender.hasValue()) {\n\t\tlet customEmplService = layout.getService($CustomEmployeeDataController);\n\t\tlet model = await customEmplService.GetEmployeeData(sender.params.value.id);\n\t\tif (model) {\n\t\t\tmanagerControl.params.value = model.manager;\n\t\t\tphoneControl.params.value = model.phone;\n\t\t\treturn;\n\t\t}\n\t}\n\tmanagerControl.params.value = null;\n\tphoneControl.params.value = null;\n}\n\nexport async function elementsLoadedEdit() {\n\tawait fillWhoArranges();\n}\n\nexport async function elementsLoadedView() {\n\tSetToApprovingButtonCanClick();\n}\n\n// В разметке на «редактирование»: при первом открытии карточки в поле «Кто оформляет» \n//должны вписываться сотрудники из группы справочника сотрудников - «Секретарь».\nasync function fillWhoArranges() {\n\tlet layout = layoutManager.cardLayout;\n\tlet isCreateLayout = layout.layoutInfo.action = GenModels.LayoutAction.Create;\n\tif (!isCreateLayout) return;\n\n\tlet managerControl = layout.controls.tryGet<MultipleEmployees>(\"whoArranges\");\n\tif (!managerControl) return;\n\tlet service = layout.getService($CustomEmployeeDataController);\n\tlet model = await service.GetEmployeesFromGroup(\"Секретарь\");\n\tif (model) {\n\t\tmanagerControl.params.value = model.employees;\n\t}\n}\n\n//В разметке на «редактирование»: при выборе значения в поле «Город», необходимо получить значение \n//из этого элемента справочника (мы его создавали ранее, поле «Суточные») и вписать в поле \n//«Сумма командировочных», рассчитав по следующей формуле: \n//«Суточные» * значение в поле «Кол-во дней в командировке».\nexport async function city_ChangeData(sender: DirectoryDesignerRow) {\n\tlet layout = sender.layout;\n\tlet tripDaysContol = layout.controls.tryGet<NumberControl>(\"tripDays\");\n\tlet expensesContol = layout.controls.tryGet<NumberControl>(\"expenses\");\n\tif (!tripDaysContol || !expensesContol) return;\n\tif (!tripDaysContol.hasValue()) return;\n\n\tif (sender.hasValue()) {\n\t\tlet service = layout.getService($CustomCityDataController);\n\t\tlet model = await service.GetCityData(sender.params.value.id);\n\t\tif (model) {\n\t\t\texpensesContol.params.value = parseFloat(model.dailyAllowance) * tripDaysContol.value;\n\t\t\treturn;\n\t\t}\n\t}\n\texpensesContol.params.value = null;\n}\n\n// В разметке на «чтение»: добавить кнопку на форму карточки, переводящую карточку в состояние \n// «На согласование» и доступна только в состоянии «Проект».\nexport async function toApproving_Click(sender: CustomButton) {\n\tlet layout = sender.layout;\n\tlet stateContol = layout.controls.tryGet<State>(\"state\");\n\tif (stateContol == null) return;\n\tlet service = layout.getService($CustomApprovingStageOperationDataController);\n\tlet model = await service.GetApprovingStageOperationData(layout.cardInfo.id, \"ToApproving\");\n\tstateContol.reloadFromServer();\n}\n\nfunction SetToApprovingButtonCanClick() {\n\tlet layout = layoutManager.cardLayout;\n\tlet toApprovingControl = layout.controls.tryGet<CustomButton>(\"toApproving\");\n\tlet state = layout.controls.tryGet<State>(\"state\");\n\tif (!toApprovingControl || !state) return;\n\n\tlet isStateProject = state.params.value.caption == \"Проект\";\n\tlet isView = layout.layoutInfo.action == GenModels.LayoutAction.View;\n\ttoApprovingControl.params.disabled = isStateProject && isView ? false : true;\n\ttoApprovingControl.forceUpdate();\n\ttoApprovingControl.save();\n}\n\n// В разметке на «редактирование»: добавить кнопку «Запросить стоимость билетов».\n// При ее нажатии должен вызываться метод серверного расширения, который запросит данные \n// по стоимости билетов. В метод должны быть переданы следующие данные:\n//     • Код аэропорта назначения – по значению, указанному в контроле «Город» необходимо \n//       получить код аэропорта из справочника.\n//     • Дата вылета – значение контрола «Даты командировки С:»\n//     • Дата прилета – значение контрола «по:»\n// Результатом выполнения данного метода серверного расширения должна быть сумма билетов (туда-обратно), \n// записанная в контрол «Стоимость билетов» (его необходимо так же добавить, по аналогии с толстым клиентом).\nexport async function getTicketCosts_Click(sender: CustomButton) {\n\t// private void GetTicketsCost_ItemClick(System.Object sender, DevExpress.XtraBars.ItemClickEventArgs e)\n\t// {\n\t// ILayoutPropertyItem ticketsCostControl = CustomizableControl.FindPropertyItem<ILayoutPropertyItem>(\"TicketsCost\");\n\t// if (ticketsCostControl == null) return;\n\n\t// ILayoutPropertyItem cityControl = CustomizableControl.FindPropertyItem<ILayoutPropertyItem>(\"City\");\n\t// if (cityControl == null) return;\n\t// BaseUniversalItem citiesRow = ObjContext.GetObject<BaseUniversalItem>((Guid)cityControl.ControlValue);\n\t// if (citiesRow == null) return;\n\n\t// string destinationIATA = citiesRow.ItemCard.MainInfo[\"AeroCode\"].ToString();\n\t// if (destinationIATA == \"LED\")\n\t// {\n\t// \tticketsCostControl.ControlValue = 0;\n\t// \treturn;\n\t// }\n\n\t// ILayoutPropertyItem sinceControl = CustomizableControl.FindPropertyItem<ILayoutPropertyItem>(\"DateSince\");\n\t// if (sinceControl == null) return;\n\t// DateTime since = DateTime.Parse(sinceControl.ControlValue.ToString());\n\n\t// ILayoutPropertyItem tillControl = CustomizableControl.FindPropertyItem<ILayoutPropertyItem>(\"DateTill\");\n\t// if (tillControl == null) return;\n\t// DateTime till = DateTime.Parse(tillControl.ControlValue.ToString());\n\n\t// ExtensionMethod method = Session.ExtensionManager.GetExtensionMethod(\"DEVSchoolSE\", \"GetTicketsCost\");\n\t// method.Parameters.AddNew(\"destinationIATA\", ParameterValueType.String, destinationIATA);\n\t// method.Parameters.AddNew(\"since\", ParameterValueType.DateTime, since);\n\t// method.Parameters.AddNew(\"till\", ParameterValueType.DateTime, till);\n\n\t// string methodResult = (string)method.Execute();\n\t// decimal result = decimal.Parse(methodResult); // 2690.00 can be displayed as 269.00\n\t// ticketsCostControl.ControlValue = result.ToString(\"F2\");\n\t// }\n\n\tlet layout = sender.layout;\n\tlet ticketsCostControl = layout.controls.tryGet<NumberControl>(\"ticketsCost\");\n\tlet cityControl = layout.controls.tryGet<DirectoryDesignerRow>(\"city\");\n\tlet sinceControl = layout.controls.tryGet<DateTimePicker>(\"dateSince\");\n\tlet tillControl = layout.controls.tryGet<DateTimePicker>(\"dateTill\");\n\tif (!ticketsCostControl || !cityControl || !sinceControl || !tillControl) return;\n\tlet destinationId = cityControl.params.value.id\n\tlet departureDate = sinceControl.params.value;\n\tlet destinationDate = tillControl.params.value;\n\tlet service = layout.getService($CustomTicketsCostDataController);\n\tlet model = await service.GetTicketsCostData(destinationId, departureDate, destinationDate);\n\t\n\tif (model.cost == \"-1.0\"){\n\t\tMessageBox.ShowInfo(\"Перелеты из Санкт-Петербурга осуществляются только в другие города\");\n\t\tticketsCostControl.params.value = null;\n\t\treturn;\n\t}\n\tticketsCostControl.params.value = parseFloat(model.cost);\n}\n","﻿import * as SomeEventHandlers from \"./EventHandlers/SomeEventHandlers\";\nimport { extensionManager } from \"@docsvision/webclient/System/ExtensionManager\";\nimport { Service } from \"@docsvision/webclient/System/Service\";\nimport { $CustomEmployeeDataController, CustomEmployeeDataController } from \"./Controllers/CustomEmployeeDataController\";\nimport { $RequestManager } from \"@docsvision/webclient/System/$RequestManager\";\nimport { $CustomCityDataController, CustomCityDataController } from \"./Controllers/CustomCityDataController\";\nimport { $CustomApprovingStageOperationDataController, CustomApprovingStageOperationDataController } from \"./Controllers/CustomOperationDataController\";\nimport { $CustomTicketsCostDataController, CustomTicketsCostDataController } from \"./Controllers/CustomTicketsCostDataController\";\n\n// Главная входная точка всего расширения\n// Данный файл должен импортировать прямо или косвенно все остальные файлы, \n// чтобы rollup смог собрать их все в один бандл.\n\n// Регистрация расширения позволяет корректно установить все\n// обработчики событий, сервисы и прочие сущности web-приложения.\nextensionManager.registerExtension({\n    name: \"Business Trip Front Extension\",\n    version: \"1.0.0\",\n    globalEventHandlers: [ SomeEventHandlers ],\n    layoutServices: [\n        Service.fromFactory(\n            $CustomEmployeeDataController,\n            (services: $RequestManager) => new CustomEmployeeDataController(services)\n        ),\n        Service.fromFactory(\n            $CustomCityDataController,\n            (services: $RequestManager) => new CustomCityDataController(services)\n        ),\n        Service.fromFactory(\n            $CustomApprovingStageOperationDataController,\n            (services: $RequestManager) => new CustomApprovingStageOperationDataController(services)\n        ),\n        Service.fromFactory(\n            $CustomTicketsCostDataController,\n            (services: $RequestManager) => new CustomTicketsCostDataController(services)\n        ),\n    ]\n})\n"],"names":["urlStore","serviceName","MessageBox","layoutManager","GenModels","extensionManager","Service"],"mappings":"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"}